{
  //You must make sure to update the host to reflect the appropriate environment that this is deployed in.


  "swagger": "2.0",
  "x-api-store-tags": [
    "regulation",
    "legislation",
    "act",
    "tc",
    "transport"
  ],
  "x-api-store-short-desc": "Toutes les lois et tous les règlements du gouvernement du Canada sont à portée de main grâce au Référentiel législatif et réglementaire de TC (RLRTC).",
  "x-api-store-long-desc": "Le RLRTC consiste à la fois en une base de données et en une interface de programmation Web qui recense toutes les lois et tous les règlements du gouvernement du Canada en format lisible à la machine. Chaque loi et règlement possède un identificateur unique, ce qui facilite le suivi des renvois à des règlements particuliers. Par exemple, dans une application conçue pour les inspecteurs maritimes, on pourrait retrouver une section où les inspecteurs peuvent consigner toutes les infractions constatées pendant une inspection. Chaque infraction peut ainsi être associée à un règlement. De cette manière, l’inspecteur serait en mesure de rechercher des règlements à même l’application au lieu de le faire manuellement, et les gestionnaires de TC pourront extraire des statistiques sur les règlements enfreints.",
  "x-api-store-documentation": "<h3>Qu’est-ce que le Référentiel législatif et réglementaire de TC (RLRTC)?</h3><p>Le RLRTC consiste à la fois en une base de données et en une interface de programmation Web qui recense toutes les lois et tous les règlements du gouvernement du Canada en format lisible à la machine. Chaque loi et règlement possède un identificateur unique, ce qui facilite le suivi des renvois à des règlements particuliers. Par exemple, dans une application conçue pour les inspecteurs maritimes, on pourrait retrouver une section où les inspecteurs peuvent consigner toutes les infractions constatées pendant une inspection. Chaque infraction peut ainsi être associée à un règlement. De cette manière, l’inspecteur serait en mesure de rechercher des règlements à même l’application au lieu de le faire manuellement, et les gestionnaires de TC pourront extraire des statistiques sur les règlements enfreints.</p><br><h3>À quel niveau de service peut-on s’attendre pour le RLRTC?</h3><p>Le temps d’arrêt maximal admissible pour cette application est de huit heures de travail normales. Le soutien technique n’est actuellement pas garanti en dehors des heures régulières de bureau. Il serait avisé de prévoir une cache où se trouvent les données du RLRTC nécessaires au fonctionnement de certaines applications et de concevoir ces applications pour qu’elles puissent tolérer un tel temps d’arrêt.</p><br><h3>Que devrais-je faire si je constate un problème avec le RLRTC?</h3><p>Si vous êtes témoin d’un incident lié à la sécurité, par exemple une prise de contrôle du RLRTC par une entité non autorisée, communiquez immédiatement avec la Sécurité des technologies de l’information (TI). Si vous constatez plutôt un problème de non-disponibilité ou un bogue logiciel apparent, communiquez avec le gestionnaire de l’équipe responsable de la surveillance numérique. Au moment de la rédaction du présent document, il s’agit de Simon Piché.</p>",
  "x-api-store-phone": "",
  "x-api-store-sensitivity": "Unclassified",
  "x-api-store-plans": {
    "free": {
      "name": "Plan standard",
      "description": "Tous les abonnés doivent utiliser ce plan."
    }
  },
  "info": {
    "version": "1.0",
    "title": "Référentiel législatif et réglementaire du TC",
    "description": "Toutes les lois et tous les règlements du gouvernement du Canada sont à portée de main grâce au Référentiel législatif et réglementaire de TC (RLRTC).",
    "contact": {
      "name": "Lawrence Maroun",
      "email": "lawrence.maroun@tc.gc.ca"
    }
  },
  "schemes": [ "https" ],
  "basePath": "/",
  "host": "",//Set this to match the environment's host
  "paths": {
    "/actdetails/{uniqueId}/{lang}": {
      "get": {
        "tags": [
          "ActDetails"
        ],
        "parameters": [

          {
            "name": "uniqueId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActDetails"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/actdetails": {
      "post": {
        "tags": [
          "ActDetails"
        ],
        "parameters": [
          {
            "name": "actIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActId"
              }
            }
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActDetails"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/acts": {
      "get": {
        "tags": [
          "Acts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActSummary"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      },
      "post": {
        "tags": [
          "Acts"
        ],
        "parameters": [
          {
            "name": "actIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActId"
              }
            }
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Act"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/acts/regs": {
      "get": {
        "tags": [
          "Acts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Act"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/acts/{uniqueId}/{lang}": {
      "get": {
        "tags": [
          "Acts"
        ],
        "parameters": [
          {
            "name": "uniqueId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActDetails"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Language"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/regdetails/{id}": {
      "get": {
        "tags": [
          "RegDetails"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegDetails"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/regdetails": {
      "post": {
        "tags": [
          "RegDetails"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegDetails"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/regs": {
      "get": {
        "tags": [
          "Regs"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Reg"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      },
      "post": {
        "tags": [
          "Regs"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Reg"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    },
    "/regs/{id}": {
      "get": {
        "tags": [
          "Regs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/UserKeyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Reg"
            }
          },
          "503": {
            "description": "Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "ActDetails": {
      "type": "object",
      "properties": {
        "uniqueId": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "fullDetails": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ActId": {
      "type": "object",
      "properties": {
        "uniqueId": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ActSummary": {
      "type": "object",
      "properties": {
        "uniqueId": {
          "type": "string"
        },
        "officialNum": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "currentToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "Reg": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "otherLangId": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "currentToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "ActReg": {
      "type": "object",
      "properties": {
        "actUniqueId": {
          "type": "string"
        },
        "actLang": {
          "type": "string"
        },
        "regId": {
          "type": "string"
        },
        "reg": {
          "allOf": [
            {
              "$ref": "#/definitions/Reg"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Act": {
      "type": "object",
      "properties": {
        "regs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActReg"
          }
        },
        "uniqueId": {
          "type": "string"
        },
        "officialNum": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "currentToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "RegDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullDetails": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Language": {
      "type": "object",
      "properties": {
        "langCode": {
          "type": "string"
        },
        "englishLabel": {
          "type": "string"
        },
        "frenchLabel": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "parameters": {
    "UserKeyParam": {
      "name": "user_key",
      "in": "header",
      "description": "Your API access key",
      "required": true,
      "x-data-threescale-name": "user_keys",
      "type": "string"
    }
  }
}
